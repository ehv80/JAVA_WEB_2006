JavaServer Pages
Habiendo conocido la base del desarrollo
de aplicaciones web con Java,
los servlets, hemos visto que su aplicación
puede tornarse un poco difícil para
grandes aplicaciones. En este capítulo
veremos una alternativa más sencilla:
JavaServer Pages (JSP).

¿POR QUÉ NO SERVLETS?
En el capítulo 2 vimos con detalle cómo crear páginas web dinámicas usando servlets.
La principal dificultad de los servlets es que mezclan presentación con contenido.
Un diseñador gráfico tendría que tocar código fuente Java para poder aplicarle diseño 
a la página que queremos crear, y a su vez, un programador tendría que tocar código 
lleno de elementos de diseño que dificultan el desarrollo. Para ilustrar este concepto,
veamos un fragmento de una página web con mucho diseño gráfico embebida en un servlet.

Nota: ver el archivo 
E:\Users\ehv80\Documentos\Programacion_en_Lenguaje_Java\JAVA_WEB_2006\Servlets\src\ServletConDisenio.Java

Este código es muy dificultoso de leer y de mantener. Tenemos que escapar cada comilla del código HTML
en el código Java con \" y se complica su lectura. Además, si el diseñador gráfico quisiera cambiar
algo del diseño, estaría modificando código fuente y tendría que reiniciar el servidor para que tome los cambios.

Por estos motivos, Sun desarrolló JavaServer Pages.

JAVASERVER PAGES 
JavaServer Pages, como su nombre lo indica, son páginas. Esta tecnología propone un cambio al modo
en que se desarrollan páginas web con Java. En vez de escribir un servlet que al ejecutarse devuelva
el contenido (tanto estático como dinámico), lo que propone es crear una página web con el contenido estático
y el dinámico. Esto a priori suena igual que un servlet, ¿dónde radica la diferencia? La mejor forma de entender
de qué se trata JavaServer Pages es con un ejemplo.

Nota ver el archivo:
E:\Users\ehv80\Documentos\Programacion_en_Lenguaje_Java\JAVA_WEB_2006\Servlets\jsp\fecha.jsp

"
<%-- fecha.jsp  --%>

<html>
	<head>
		<title>Fecha en JSP</title>
	</head>
	<body>
		Hola!<br/>
		La fecha de hoy es <b><%= new java.util.Date() %></b>
	</body>
</html>
"

Si creamos este archivo con nombre fecha.jsp en la carpeta raíz de nuestro proyecto Tomcat
en el Eclipse, arrancamos el servidor Tomcat y apuntamos el navegador a 
http://localhost:8080/Servlets/fecha.jsp (asumiendo que nuestro proyecto se llama Servlets)
veremos algo similar a la Figura 1.


